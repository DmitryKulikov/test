Тестовое задание для frontend
Верстка        1
Получение списка авто        2
Требования к верстке        3
Формат представления решения        5


Верстка
Сверстать меню с фильтром, каталог авто и листинг согласно файлам:
https://drive.google.com/file/d/0B_apKFByhvnGSEJ1aGV1UFY5OWM/view?usp=sharing
https://drive.google.com/file/d/0B_apKFByhvnGVnprMVlzcEZZYnM/view?usp=sharing
Для шрифтов использовать обычные системные.
________________
Получение списка авто
Для получения списка авто надо сделать запрос к REST API: GET http://sebekondev:sebekondev@dev.rentride.ru/api/1.0/cars/?datestart=1474114188&dateend=1474114188  
В параметрах запроса можно указать период желаемой аренды в timestamp.
Описание атрибутов ответа:
+ Attributes
    + cars (array)
        + (object)
            + id: 56897 (number) - Идентификатор автомобиля.
            + brand: 233 (number) - Идентификатор бренда автомобиля - на странице вывести просто название любой марки.
            + model: 5678 (number) - Идентификатор модели автомобиля - на странице вывести просто название любой модели.
          + address: г. Москва, ул. 31 февраля, д. 12 (string) - Адрес местоположения автомобиля.
            + images (object) - Массив фотографий автомобиля.
                + mainImageSmall: http://rentride.ru/images/dckdsvlkv_small.jpg - Превью главной фотографии автомобиля.
            + year: 2012 (number) - Год выпуска автомобиля.
        + priceDay: 1000.00 (optional, number) - Цена в рублях за 1 сутки аренды автомобиля.
      + favorite: true (boolean) - Автомобиль добавлен в избранное текущего пользователя.
          + osago: true (boolean) - Есть ОСАГО без ограничений или готов вписать в страховку. False - страховка отсутствует.
            + casco: true  (boolean) - Есть КАСКО без ограничений или готов вписать в страховку. False - страховка отсутствует.
________________
Требования к верстке (в целом)
1. Вёрстка должна максимально соответствовать макету. Допускаются расхождения в несколько пикселей (до 5-ти). Для адаптивной верски допускаются бОльшие расхождения.
2. Вёрстка должна корректно отображаться в следующих браузерах: 
   * IE10+
   * Firefox
   * Chrome
   * Safari
   * Opera
   * ...и на мобильных устройствах
1. Вёрстка должна быть валидной (с проверкой в W3C валидаторе)
2. Обязательно указывать <!DOCTYPE html>.
3. Сайт должен корректно отображаться при всех стандартных разрешениях от 1024px и выше и не иметь горизонтального скролла.
4. Верстка не должна рассыпаться при вбивании большого количества контента, у всех элементов должны быть предусмотрены стандартные стили вписывающиеся в общий стиль макета.
5. Изображения и код должны быть оптимизированы, все иконки и прочие изображения используемые для дизайна по возможности объединять в спрайты, если в дизайне используются векторные изображения нужно использовать svg.
6. Обязательно указывать Win/Mac/Linux-аналоги шрифтов. При подключении не стандартных шрифтов начертание задается только свойствами font-weight и font-style (подробнее: http://verstka.pro/notes/nestandartnye-shrifty-v-html-font-face.html)
7. Функциональные элементы должны быть доступны при отключенных картинках и javascript, так же выпадающие меню должны быть доступны на touch устройствах.
8. Семантичность, отсутствие глупостей в html и css, единообразие и аккуратность в коде. 
9. Любые css3 свойства должны иметь аналоги с префиксами соответствующих браузеров. 
10. Придерживаться bem методологии именования классов, избегать вложенности больше 3 уровня. (https://ru.bem.info/method/naming-convention/ )
11. Блоки должны быть максимально изолированы, воздействие внешних блоков должно быть минимально. Модификация блоков при помощи модификаторов
12. Глобальные стили .page-main .page-inner .page-serch  допускаются только в исключительных случаях
13. Заголовки должны следовать от большего к меньшему (H1,H2,… и т. д.), не допускается использовать теги H до заголовка H1
14. В блоках где контент будет добавляться пользователем теги для задания типографики (h1,h2, и тп, p, ul, blockquote и тп ) должны смотреться органично и не должны иметь классов если в этом нет особой необходимости.
15. Стиль для таблиц должен быть сброшен, в блоках где контент добавляет пользователь таблицам присваивается класс .table
16. Ссылки и кнопки должны реагировать на наведение. Если в дизайне не заданы состояния ссылки при наведении подчеркиваются, кнопки меняют цвет фона на 10% - 15% темнее или светлее. 
17. Логотип компании в шапке c с внутренних страниц должен вести на главную, на главной логотип не ссылка.
18. Не называть изображения banner, advert, ads и т. д., файлы с такими названиями блокируются многими антивирусами и файрволами, используйте pic или img для баннеров и прочего.
19. Все телефоны ссылки вида <a href="tel:+74956789014">+7-495-678-90-14</a>.
20. Не использовать #id для стилизации элементов.
21. Для изображений необходимо использовать наиболее подходящий формат в данном конкретном случае (чаще тот, что меньше весит).
22. Из финальной версии вёрстки должны быть удалены все лишние файлы и код.
23. Если используется какой либо препроцессор (LESS, SCSS) исходники так же должны быть приложены, то же касается конфигурации сборщиков (gulp, grunt)
24. В меню, навигации, табах, элементах которые могут быть выделены, выделенное состояние должно быть показано 
25. Должна быть настроена последовательность перехода по кнопке “Tab” для всех страниц сайта, на которых это имеет значение (как то: авторизация, регистрация, оформление заказа)
26. Никакого Bootstrap! 


Формат представления решения
Или zip архив или код на GitHub